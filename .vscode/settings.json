{
    "accessibility.signals.taskFailed": {
        "sound": "off",
        "announcement": "off"
    },
    "accessibility.signals.chatResponseReceived": {
        "sound": "off"
    },
    "editor.rulers": [
        88
    ],
    "editor.wordWrap": "on",
    "files.trimTrailingWhitespace": true,
    "files.insertFinalNewline": true,
    "files.eol": "\n",
    // Formatting settings
    "ruff.enable": true,
    "ruff.configuration": "${workspaceFolder}/.config/ruff.toml",
    "ruff.importStrategy": "fromEnvironment",
    "ruff.organizeImports": true,
    // Python settings
    "python.languageServer": "Pylance",
    "python.analysis.typeCheckingMode": "basic",
    "python.analysis.diagnosticMode": "workspace",
    "python.analysis.autoImportCompletions": true,
    "python.terminal.activateEnvironment": true,
    "python.defaultInterpreterPath": "python",
    "python.condaPath": "conda",
    "[python]": {
        "editor.defaultFormatter": "charliermarsh.ruff",
        "editor.codeActionsOnSave": {
            "source.fixAll": "explicit",
            "source.organizeImports": "explicit"
        }
    },
    // Jupyter settings
    "notebook.formatOnSave.enabled": true,
    "[jupyter]": {
        "editor.defaultFormatter": "charliermarsh.ruff",
        "editor.formatOnSave": true,
        "editor.codeActionsOnSave": {
            "source.fixAll.ruff": "explicit",
            "source.organizeImports.ruff": "explicit"
        }
    },
    "jupyter.askForKernelRestart": false,
    "jupyter.interactiveWindow.creationMode": "perFile",
    "jupyter.notebookFileRoot": "${workspaceFolder}",
    // Terminal settings
    "terminal.integrated.gpuAcceleration": "auto",
    "terminal.integrated.profiles.windows": {
        "PowerShell": {
            "source": "PowerShell",
            "icon": "terminal-powershell"
        },
        "conda-djpy": {
            "source": "PowerShell",
            "icon": "terminal-powershell",
            "args": [
                "-NoExit",
                "-Command",
                "if (Get-Command conda -ErrorAction SilentlyContinue) { if (-not (conda env list | Select-String -Pattern '\\bdjpyworkshop\\b')) { Write-Host 'Creating conda environment...' -ForegroundColor Yellow; conda env create -f .\\environment.yml -n djpyworkshop }; conda activate djpyworkshop } else { Write-Host 'Conda not found. Please install Miniconda or Anaconda.' -ForegroundColor Red }"
            ]
        }
    },
    "terminal.integrated.profiles.osx": {
        "zsh": {
            "path": "zsh",
            "args": [
                "-l"
            ]
        },
        "conda-djpy": {
            "path": "zsh",
            "args": [
                "-l",
                "-c",
                "if command -v conda >/dev/null 2>&1; then if ! conda env list | grep -q \"djpyworkshop\"; then echo \"Creating conda environment...\"; conda env create -f ./environment.yml -n djpyworkshop; fi; conda activate djpyworkshop; else echo \"Conda not found. Please install Miniconda or Anaconda.\"; fi"
            ]
        }
    },
    "terminal.integrated.defaultProfile.windows": "conda-djpy",
    "terminal.integrated.defaultProfile.osx": "conda-djpy",
    // Workspace actions
    "workbench.startupEditor": "welcomePage",
    "workbench.editorAssociations": {
        "*.ipynb": "jupyter-notebook"
    },
    "explorer.autoReveal": true,
    // JSON settings
    "[json]": {
        "editor.defaultFormatter": "vscode.json-language-features",
        "editor.formatOnSave": true
    },
    "[jsonc]": {
        "editor.defaultFormatter": "vscode.json-language-features",
        "editor.formatOnSave": true
    }
}
